

type User @entity{
  id: ID!
  deposited: BigInt!
  depositedBlock: BigInt!
}

# User balance at each transfers occurs
# id -> user address in hex
# balance -> array of balance and on which block number
# numOftransfer -> balance.length
type Balance @entity {
  id: ID!
  balance: [BlockBalance!]!
  numOfTransfer: BigInt!
}

type BlockBalance @entity{
  id: ID!
  block: BigInt!
  balance: BigInt!
}

# id: block number
# tokenSupply: total minted sgrt tokens 
type TokenStatus @entity {
  id: ID!
  tokenSupply: BigInt!
}

# address that delegated
type DelegationAddress @entity {
  id: ID!
  addresses: [Bytes!]!
}

# destake staking contract balance
type StakingBalance @entity {
  id: ID!
  # balanceAtBlock: [BlockBalance!]!
  poolTotalShares: [BlockBalance!]!
  poolTotalTokens: [BlockBalance!]!
}